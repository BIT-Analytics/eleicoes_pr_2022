---
format: html
---

```{r setup, echo = FALSE, warning = FALSE, error = FALSE, message = FALSE}

library(echarts4r)
library(tidyverse)

knitr::opts_chunk$set(echo = FALSE, warning = FALSE,
                      error = FALSE, message = FALSE)

load("data.RData")

```

```{css}

.row {
margin: 40px 0;
}

```

```{r}

df <- df_eleicoes_pr_2turno |> 
  dplyr::select(date_totalizacao, cand, votos, porcentagem_votos) |> 
  dplyr::mutate(chack = paste(date_totalizacao, cand)) |> 
  dplyr::distinct(chack, .keep_all = T) |> 
  dplyr::select(-chack) |> 
  # tidyr::pivot_wider(names_from = cand, values_from = votos) |> 
  dplyr::mutate(date_totalizacao = ifelse(date_totalizacao == " ",
                                          "2022-10-30 17:00:00",
                                          date_totalizacao),
                date_totalizacao = lubridate::ymd_hms(date_totalizacao)) %>% 
  dplyr::mutate(cand = factor(cand, levels = c("Lula", "Bolsonaro")))

# axis
label_js2 <- list(
  formatter = htmlwidgets::JS(
    "function(value, index, precision = 2){
    const abbrev = ['', 'K', 'M', 'B', 'T'];
    const unrangifiedOrder = Math.floor(Math.log10(Math.abs(value)) / 3)
    const order = Math.max(0, Math.min(unrangifiedOrder, abbrev.length -1 ))
    const suffix = abbrev[order];
    return (((value / Math.pow(10, order * 3)).toFixed(2) + suffix))
                               }"
  )
)

p1 <- df |> 
  # dplyr::filter(date_totalizacao < 
  #                 lubridate::ymd_hms("2022-10-30 22:57:09")) |> 
  dplyr::filter(date_totalizacao < 
                  lubridate::ymd_hms("2022-10-30 20:00:00")) |> 
  dplyr::group_by(cand) |> 
  e_charts(date_totalizacao,
           elementId = "chart1") |> 
  e_line(votos, symbol = "none",
         endLabel = list(show = T,
                         formatter =  htmlwidgets::JS(
                           "function(params, precision = 2){
    const abbrev = ['', 'K', 'M', 'B', 'T'];
    const unrangifiedOrder = Math.floor(Math.log10(Math.abs(params.value[1])) / 3)
    const order = Math.max(0, Math.min(unrangifiedOrder, abbrev.length -1 ))
    const suffix = abbrev[order];
    return (((params.value[1] / Math.pow(10, order * 3)).toFixed(2) + suffix))
                               }"
                         )),
         lineStyle = list(width = 4, opacity = 0.7),
         emphasis = list(focus = 'series',
           itemStyle = list(shadowBlur = 2))) |> 
  e_y_axis(axisLabel = label_js2, 
           interval = 8000000, max = 64000000) |> 
  e_datazoom(show = FALSE) |> 
  e_datazoom(y_index = 0, type = "slider") |> 
  e_animation(duration = 1000) |> 
  e_tooltip(
    formatter = htmlwidgets::JS(
      "function (params) {
          return params.value[3] + ': ' + params.value[0];
        }"
    )) |> 
  e_title("2º Turno 2022") |> 
  e_theme("infographic")

p2 <- df |> 
  # dplyr::filter(date_totalizacao < 
  #                 lubridate::ymd_hms("2022-10-30 22:57:09"),
  #               porcentagem_votos != 0) |> 
  dplyr::filter(date_totalizacao < 
                  lubridate::ymd_hms("2022-10-30 20:00:09"),
                porcentagem_votos != 0) |> 
  dplyr::group_by(cand) |> 
  e_charts(date_totalizacao,
           elementId = "chart2") |> 
  e_line(porcentagem_votos, symbol = "none",
         endLabel = list(show = T,
                         formatter =  htmlwidgets::JS(
                           "function(params, precision = 2){
    const abbrev = ['', 'K', 'M', 'B', 'T'];
    const unrangifiedOrder = Math.floor(Math.log10(Math.abs(params.value[1])) / 3)
    const order = Math.max(0, Math.min(unrangifiedOrder, abbrev.length -1 ))
    const suffix = abbrev[order];
    return (((params.value[1] / Math.pow(10, order * 3)).toFixed(2) + suffix))
                               }"
                         )),
    lineStyle = list(width = 4, opacity = 0.7),
    emphasis = list(focus = 'series',
                    itemStyle = list(shadowBlur = 2))) |> 
  e_y_axis(axisLabel = label_js2, 
           interval = 2, max = 65, min = 40) |> 
  e_datazoom(show = FALSE) |> 
  e_datazoom(y_index = 0, type = "slider") |> 
  e_animation(duration = 1000) |> 
  e_tooltip(
    formatter = htmlwidgets::JS(
      "function (params) {
          return params.value[3] + ': ' + params.value[0];
        }"
    )) |> 
  e_title("2º Turno 2022 - % votos") |> 
  e_theme("infographic") 

# variacao
teste <- df_eleicoes_pr_2turno |> 
  dplyr::mutate(date_totalizacao = ifelse(date_totalizacao == " ",
                                          "2022-10-30 17:00:00",
                                          date_totalizacao)) |> 
  dplyr::distinct(date_totalizacao, cand, porcentagem_votos) |> 
  tidyr::pivot_wider(names_from = cand, values_from = porcentagem_votos) |> 
  dplyr::mutate(Lula = dplyr::lead(Lula) - Lula) |> 
  dplyr::mutate(Bolsonaro = dplyr::lead(Bolsonaro) - Bolsonaro,
                date_totalizacao = lubridate::ymd_hms(date_totalizacao)) |> 
  dplyr::filter(date_totalizacao < 
                  lubridate::ymd_hms("2022-10-30 20:00:00")) 

p3 <- teste |> 
  dplyr::slice(-1) |> 
  e_charts(date_totalizacao) |> 
  e_line(Lula, symbol = "none") |> 
  e_line(Bolsonaro, symbol = "none") |> 
  e_datazoom(y_index = 0, type = "slider") |> 
  e_datazoom() |> 
  e_animation(duration = 1000) |> 
  e_tooltip(
    formatter = htmlwidgets::JS(
      "function (params) {
          return params.value[3] + ': ' + params.value[0];
        }"
    )) |> 
  e_title("2º Turno 2022 - Variação % votos") |> 
  e_theme("infographic") |> 
  e_connect(c("chart1", "chart2"))

e_arrange(p1, p2, p3, rows = 3, cols = 1)

```
